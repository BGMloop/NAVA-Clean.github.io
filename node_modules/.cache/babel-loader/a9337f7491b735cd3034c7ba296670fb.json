{"ast":null,"code":"var _jsxFileName = \"/Users/Gabe/Documents/GitHub/Logic-Lords.github.io/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useCallback, useState, useEffect, useRef } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker, Autocomplete } from \"@react-google-maps/api\";\nimport API_KEY from \"../API_KEY.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationDot } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst denton = {\n  lat: 33.21618224226912,\n  lng: -97.1332708813027\n};\nconst mapStyle = {\n  height: \"70vh\",\n  width: \"70vw\"\n};\nexport default function Map() {\n  _s();\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: API_KEY.MAPS_API,\n    libraries: [\"places\"]\n  });\n  const [map, setMap] = useState(null);\n  const [status, setStatus] = useState(null);\n  const locationRef1 = useRef(null);\n  const locationRef2 = useRef(null);\n  const [location1, setLocation1] = useState(null);\n  const [location2, setLocation2] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [midpoint, setMidpoint] = useState(null); // Get users current location\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by your browser\");\n    } else {\n      // remove the location1 and location2 from the map\n      setLocation1(null);\n      setLocation2(null);\n      setStatus(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(position => {\n        // set the location1 to the current location and pan the map to the location\n        setLocation1({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        map.panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        map.setZoom(14);\n      }, () => {\n        setStatus(\"Unable to retrieve your location\");\n      });\n    }\n  };\n\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []); // handle location 1 and 2 submit button click\n\n  const locationClick = () => {\n    setLocation1(locationRef1.current.value);\n    setLocation2(locationRef2.current.value);\n  }; // convert and pin location 1 and 2 on the map\n\n\n  useEffect(() => {\n    if (location1 && location2) {\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${location1}&key=${API_KEY.MAPS_API}`).then(response => response.json()).then(data => {\n        setLocation1({\n          lat: data.results[0].geometry.location.lat,\n          lng: data.results[0].geometry.location.lng\n        });\n        map.setZoom(15);\n      });\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${location2}&key=${API_KEY.MAPS_API}`).then(response => response.json()).then(data => {\n        setLocation2({\n          lat: data.results[0].geometry.location.lat,\n          lng: data.results[0].geometry.location.lng\n        });\n        map.setZoom(15);\n      }); // calculate the midpoint using the Haversine formula\n\n      const R = 6371; // Earth's radius in kilometers\n\n      const dLat = toRad(location2.lat - location1.lat);\n      const dLon = toRad(location2.lng - location1.lng);\n      const lat1 = toRad(location1.lat);\n      const lat2 = toRad(location2.lat);\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c;\n      const midpointLat = (location1.lat + location2.lat) / 2;\n      const midpointLng = (location1.lng + location2.lng) / 2;\n      setMidpoint({\n        lat: midpointLat,\n        lng: midpointLng\n      }); // create a directions renderer\n\n      const directionsRenderer = new window.google.maps.DirectionsRenderer(); // get directions from location 1 to location 2\n\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route({\n        origin: location1,\n        destination: location2,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          directionsRenderer.setDirections(result);\n          directionsRenderer.setMap(map);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n      const distanceService = new window.google.maps.DistanceMatrixService();\n      distanceService.getDistanceMatrix({\n        origins: [location1],\n        destinations: [location2],\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DistanceMatrixStatus.OK) {\n          setDistance(result.rows[0].elements[0].distance.text);\n          setDuration(result.rows[0].elements[0].duration.text); // log the distance and duration from point a to point b to the console\n\n          console.log(result.rows[0].elements[0].distance.text);\n          console.log(result.rows[0].elements[0].duration.text); // log the midpoint to the console\n\n          console.log(midpoint); // put a marker on the midpoint\n\n          new window.google.maps.Marker({\n            position: midpoint,\n            map,\n            title: \"Midpoint\"\n          });\n        } else {\n          console.error(`error fetching distance ${result}`);\n        }\n      });\n    }\n  }, [location1, location2, map]);\n\n  function toRad(Value) {\n    return Value * Math.PI / 180;\n  }\n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-full mb-4\",\n      onClick: getLocation,\n      children: \"Get Device location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyle,\n      center: denton,\n      zoom: 5,\n      onLoad: map => setMap(map),\n      onUnmount: onUnmount,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: location1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: location2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:w-1/2 md:w-2/3 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row mb-8 items-center text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1 w-3/4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              className: \"text-4xl text-center text-gray-600\",\n              children: \"Location 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: locationRef1,\n                fields: [\"address_components\", \"formatted_address\", \"geometry\"],\n                type: \"address\",\n                id: \"address\",\n                placeholder: \"address 1\",\n                name: \"address\",\n                className: \"w-full bg-gray-100 rounded border border-gray-300 focus:border-indigo-500 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1 w-3/4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              className: \"text-4xl text-gray-600\",\n              children: \"Location 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: locationRef2,\n                fields: [\"address_components\", \"formatted_address\", \"geometry\"],\n                type: \"address\",\n                id: \"address\",\n                placeholder: \"address 2\",\n                name: \"address\",\n                className: \"w-full bg-gray-100 rounded border border-gray-300 focus:border-indigo-500 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex mx-auto mt-[-20px] mb-6 bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-12 rounded-full\",\n        onClick: locationClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Map, \"nDcrr3jRiIAX/Jw7WWD/j92jPJ4=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","GoogleMap","useJsApiLoader","Marker","Autocomplete","API_KEY","FontAwesomeIcon","faLocationDot","denton","lat","lng","mapStyle","height","width","Map","isLoaded","googleMapsApiKey","MAPS_API","libraries","map","setMap","status","setStatus","locationRef1","locationRef2","location1","setLocation1","location2","setLocation2","distance","setDistance","duration","setDuration","midpoint","setMidpoint","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","panTo","setZoom","onUnmount","callback","locationClick","current","value","fetch","then","response","json","data","results","geometry","location","R","dLat","toRad","dLon","lat1","lat2","a","Math","sin","cos","c","atan2","sqrt","midpointLat","midpointLng","directionsRenderer","window","google","maps","DirectionsRenderer","directionsService","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","setDirections","console","error","distanceService","DistanceMatrixService","getDistanceMatrix","origins","destinations","DistanceMatrixStatus","rows","elements","text","log","title","Value","PI"],"sources":["/Users/Gabe/Documents/GitHub/Logic-Lords.github.io/src/components/Map.js"],"sourcesContent":["import React from \"react\";\nimport { useCallback, useState, useEffect, useRef } from \"react\";\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Autocomplete,\n} from \"@react-google-maps/api\";\nimport API_KEY from \"../API_KEY.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationDot } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst denton = {\n  lat: 33.21618224226912,\n  lng: -97.1332708813027,\n};\n\nconst mapStyle = {\n  height: \"70vh\",\n  width: \"70vw\",\n};\n\nexport default function Map() {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: API_KEY.MAPS_API,\n    libraries: [\"places\"],\n  });\n\n  const [map, setMap] = useState(null);\n  const [status, setStatus] = useState(null);\n  const locationRef1 = useRef(null);\n  const locationRef2 = useRef(null);\n  const [location1, setLocation1] = useState(null);\n  const [location2, setLocation2] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [midpoint, setMidpoint] = useState(null);\n\n  // Get users current location\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by your browser\");\n    } else {\n      // remove the location1 and location2 from the map\n      setLocation1(null);\n      setLocation2(null);\n\n      setStatus(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          // set the location1 to the current location and pan the map to the location\n          setLocation1({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n          map.panTo({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n          map.setZoom(14);\n        },\n        () => {\n          setStatus(\"Unable to retrieve your location\");\n        }\n      );\n    }\n  };\n\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  // handle location 1 and 2 submit button click\n  const locationClick = () => {\n    setLocation1(locationRef1.current.value);\n    setLocation2(locationRef2.current.value);\n  };\n\n  // convert and pin location 1 and 2 on the map\n  useEffect(() => {\n    if (location1 && location2) {\n      fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${location1}&key=${API_KEY.MAPS_API}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setLocation1({\n            lat: data.results[0].geometry.location.lat,\n            lng: data.results[0].geometry.location.lng,\n          });\n          map.setZoom(15);\n        });\n\n      fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${location2}&key=${API_KEY.MAPS_API}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setLocation2({\n            lat: data.results[0].geometry.location.lat,\n            lng: data.results[0].geometry.location.lng,\n          });\n          map.setZoom(15);\n        });\n\n      // calculate the midpoint using the Haversine formula\n      const R = 6371; // Earth's radius in kilometers\n      const dLat = toRad(location2.lat - location1.lat);\n      const dLon = toRad(location2.lng - location1.lng);\n      const lat1 = toRad(location1.lat);\n      const lat2 = toRad(location2.lat);\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n          Math.sin(dLon / 2) *\n          Math.cos(lat1) *\n          Math.cos(lat2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c;\n      const midpointLat = (location1.lat + location2.lat) / 2;\n      const midpointLng = (location1.lng + location2.lng) / 2;\n      setMidpoint({ lat: midpointLat, lng: midpointLng });\n\n      // create a directions renderer\n      const directionsRenderer = new window.google.maps.DirectionsRenderer();\n      // get directions from location 1 to location 2\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route(\n        {\n          origin: location1,\n          destination: location2,\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            directionsRenderer.setDirections(result);\n            directionsRenderer.setMap(map);\n          } else {\n            console.error(`error fetching directions ${result}`);\n          }\n        }\n      );\n\n      const distanceService = new window.google.maps.DistanceMatrixService();\n      distanceService.getDistanceMatrix(\n        {\n          origins: [location1],\n          destinations: [location2],\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === window.google.maps.DistanceMatrixStatus.OK) {\n            setDistance(result.rows[0].elements[0].distance.text);\n            setDuration(result.rows[0].elements[0].duration.text);\n            // log the distance and duration from point a to point b to the console\n            console.log(result.rows[0].elements[0].distance.text);\n            console.log(result.rows[0].elements[0].duration.text);\n            // log the midpoint to the console\n            console.log(midpoint);\n            // put a marker on the midpoint\n            new window.google.maps.Marker({\n              position: midpoint,\n              map,\n              title: \"Midpoint\",\n            });\n          } else {\n            console.error(`error fetching distance ${result}`);\n          }\n        }\n      );\n    }\n  }, [location1, location2, map]);\n\n  function toRad(Value) {\n    return (Value * Math.PI) / 180;\n  }\n\n  return isLoaded ? (\n    <div className=\"flex flex-col items-center mt-4\">\n      <button\n        className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-full mb-4\"\n        onClick={getLocation}\n      >\n        Get Device location\n      </button>\n      <GoogleMap\n        mapContainerStyle={mapStyle}\n        center={denton}\n        zoom={5}\n        onLoad={(map) => setMap(map)}\n        onUnmount={onUnmount}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        <Marker position={location1} />\n        <Marker position={location2} />\n      </GoogleMap>\n      <div className=\"lg:w-1/2 md:w-2/3 mt-4\">\n        <div className=\"flex flex-col md:flex-row mb-8 items-center text-center\">\n          <div className=\"p-1 w-3/4\">\n            <div className=\"relative\">\n              <label for=\"name\" className=\"text-4xl text-center text-gray-600\">\n                Location 1\n              </label>\n              <Autocomplete>\n                <input\n                  ref={locationRef1}\n                  fields={[\n                    \"address_components\",\n                    \"formatted_address\",\n                    \"geometry\",\n                  ]}\n                  type=\"address\"\n                  id=\"address\"\n                  placeholder=\"address 1\"\n                  name=\"address\"\n                  className=\"w-full bg-gray-100 rounded border border-gray-300 focus:border-indigo-500 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n                />\n              </Autocomplete>\n            </div>\n          </div>\n          <div className=\"p-1 w-3/4\">\n            <div className=\"relative\">\n              <label for=\"email\" className=\"text-4xl text-gray-600\">\n                Location 2\n              </label>\n              <Autocomplete>\n                <input\n                  ref={locationRef2}\n                  fields={[\n                    \"address_components\",\n                    \"formatted_address\",\n                    \"geometry\",\n                  ]}\n                  type=\"address\"\n                  id=\"address\"\n                  placeholder=\"address 2\"\n                  name=\"address\"\n                  className=\"w-full bg-gray-100 rounded border border-gray-300 focus:border-indigo-500 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n                />\n              </Autocomplete>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"flex mx-auto mt-[-20px] mb-6 bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-12 rounded-full\"\n          onClick={locationClick}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  ) : (\n    <></>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}